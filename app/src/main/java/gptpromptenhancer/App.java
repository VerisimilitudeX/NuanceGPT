/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gptpromptenhancer;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;
import java.util.stream.Collectors;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class App {
    /**
     * Parses the message content from a given response string in JSON format.
     * 
     * @param response the response string in JSON format from the OpenAI API
     * @return the message content as a String
     */
    private static String parseMessageContent(String response) {
        String jsonString = response;
        try {
            JSONObject jsonObject = new JSONObject(jsonString);
            JSONArray choicesArray = jsonObject.getJSONArray("choices");
            JSONObject choiceObject = choicesArray.getJSONObject(0);
            JSONObject messageObject = choiceObject.getJSONObject("message");
            String messageContent = messageObject.getString("content");
            return messageContent;
        } catch (JSONException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * Sends a POST request to the OpenAI API with the specified output as the
     * prompt for the GPT-3 model.
     * 
     * @param output a String representing DNAnalyzer's analysis output
     * @return a String representing the message content generated by the GPT-3
     *         model
     */

    public static String askGPT(String output) {
        output = output.replaceAll("\\r?\\n", "");
        String API_ENDPOINT = "https://api.openai.com/v1/chat/completions";
        String AUTHORIZATION_HEADER = "Bearer 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"/* + System.getenv("OPENAI_API_KEY")*/;
        try {
            URL url = new URL(API_ENDPOINT);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "application/json");
            conn.setRequestProperty("Authorization", AUTHORIZATION_HEADER);
            conn.setDoOutput(true);

            String requestBody = "{\n" +
                    "    \"model\": \"gpt-3.5-turbo\",\n" +
                    "    \"messages\": [\n" +
                    "        {\n" +
                    "            \"role\": \"user\",\n" +
                    // grammar is incorrect on purpose to minimize the token count
                    "            \"content\": \"Can you please make my prompt more nuanced and interesting? Prompt: " + output + "Bruh you aren't supposed to answer question, just make better prompt not answer to the prompt....Don't you dare answer the prompt oly make a nuanced version of it\"\n"
                    +
                    "        }\n" +
                    "    ],\n" +
                    "    \"temperature\": 0.9\n" +
                    "}";
            conn.getOutputStream().write(requestBody.getBytes());

            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String response = reader.lines().collect(Collectors.joining());
            reader.close();

            return parseMessageContent(response);
        } catch (Exception e) {
            if (e.getMessage().contains("401")) {
                return "Error: Invalid API key. Please check your API key and try again.";
            } else {
                return "Error: " + e.getMessage();
            }
        }
    }

    public static void main(String[] args) throws InterruptedException, IOException {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter your ChatGPT prompt: ");
        String output = scanner.nextLine(); 
        String messageContent = askGPT(output);
        System.out.println(messageContent);
        scanner.close();
    }
}
